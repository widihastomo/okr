if (keyResultType === "should_stay_above" || keyResultType === "should_stay_below") {
                return (
                  <div className="grid grid-cols-1 gap-4">
                    {/* Target Value Only */}
                    <FormField
                      control={keyResultForm.control}
                      name="targetValue"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel className="flex items-center gap-2">
                            Target*
                            
                              <Popover>
                                <PopoverTrigger>
                                  <HelpCircle className="w-4 h-4 text-blue-500 hover:text-blue-600 cursor-pointer" />
                                </PopoverTrigger>
                                <PopoverContent side="right" className="max-w-xs">
                                  <p>
                                    <strong>Threshold yang harus dipertahankan</strong>
                                    <br /><br />
                                    Untuk tipe "Tetap di atas": tentukan nilai minimum yang harus selalu dijaga atau dipertahankan.
                                    <br />
                                    Untuk tipe "Tetap di bawah": tentukan nilai maksimum yang tidak boleh dilampaui.
                                    <br /><br />
                                    <strong>Contoh:</strong> Rating tetap di atas 4.0, biaya tetap di bawah 50 juta, response time di bawah 3 detik
                                  </p>
                                </PopoverContent>
                              </Popover>
                            
                          </FormLabel>
                          <FormControl>
                            <Input 
                              placeholder="100" 
                              type="number" 
                              step="0.1" 
                              value={field.value || ""} 
                              onChange={field.onChange}
                              onBlur={field.onBlur}
                              name={field.name}
                            />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                  </div>
                );
              }